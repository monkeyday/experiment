class Content extends React.Component{constructor(a){super(a),this.state={svg:{w:800,h:800},origin:{x:5,y:5},tb:{r:20,p:20,c:1}},this.evt=Svg.evt.bind(this),this.dom=Svg.dom.bind(this),this.today=today.bind(this),this.b={f:'LightSkyBlue',s:'brown',b:3},this.o={ellipse:{cx:150,rx:30,cy:150,ry:20,f:'url(#RG1)',s:'white',d:'5,4',o:0.5},parallelogram:{x:250,y:250,a:160,w:50,h:15,dom:this.dom},dot:Object.assign({},this.b,{x:105,y:105,r:3}),rrect:{x:0,rx:10,y:0,ry:10,w:50,h:50,f:'pink',t:'rotate(10 20,40)',evt:this.evt},crect:Object.assign({},this.b,{x:300,y:300,w:50,h:50,t:'rotate(10 20,40)',o:0.5,evt:this.evt}),polygon:{x:0,y:0,p:[[100,120],[75,130],[100,250],[200,250],[300,150],[175,200]],f:'url(#LG1)',r:'nonzero',s:'url(#RG1)',b:3,d:'5,4',o:0.3,dom:this.dom},polyline:{x:0,y:0,p:[[50,150],[150,250],[250,50],[200,100]],f:'none',s:'brown',b:2,d:'5,4',o:0.3},poly:{i:7,R:50,x:100,y:100,o:this.state.origin,evt:this.evt,dom:this.dom},triangle:{x:300,y:300,a:15,s:1,w:150,dom:this.dom},position:{i:8,s:20,R:100,x:300,y:300,w:100,h:80,r:15,t:Svg.Triangle,a:15,ss:110,f:'url(#RG1)'},text:{x:100,dx:5,y:100,dy:-5,f:'Teal',s:'YellowGreen',b:2,d:'5,4',t:'Hello',fs:36,fw:600,o:0.5,evt:this.evt},grid:{w:this.state.svg.w,h:this.state.svg.h,c:100,r:100,s:'grey',b:1,d:'2,5'},menu:[{t:'React SVG',d:['Poly','Triangle','-','Parellelogram']},{t:'Produce Table'},{t:'React D3'},{t:'Process CSV'},{t:'Process XLS'}]}}componentDidMount(){$(()=>{this.polyg=$(Svg.o[2]),this.polyg.on('mousedown',(a)=>{a.preventDefault(),console.log(a.clientX+'-'+a.clientY)}),this.polyg.on('dragend',(a)=>{a.preventDefault(),console.log(a.clientX+'-'+a.clientY)}),this.polyg.draggable({addClasses:!1,stop:(a,b)=>{this.setState({origin:{x:b.position.left,y:b.position.top-this.state.svg.y}});let c=b.position.left,d=b.position.top-this.state.svg.y;for(let c of Svg.o[2].points)c.x+=10,c.y-=10;console.dir(Svg.o[2].points)},zIndex:1})})}render(){let a=this.b,b=this.o;return React.createElement('div',null,React.createElement(Svg.D,{dom:this.dom}),React.createElement(Nav.Nav,{m:b.menu,evt:this.evt}),React.createElement(Calendar,{c:this}),React.createElement(Tb,{t:'Agriculture',h:[],d:this.props.d,to:this.today,r:this.state.tb.r,p:this.state.tb.p,c:this.state.tb.c}),React.createElement(SVG,{d:this.props.d}),React.createElement('svg',{width:this.state.svg.w,height:this.state.svg.h},React.createElement(Svg.Parallelogram,b.parallelogram),React.createElement(Svg.Poly,b.poly),React.createElement(Svg.Triangle,b.triangle),React.createElement(Svg.Position,b.position),React.createElement(Svg.Ellipse,b.ellipse),React.createElement(Svg.Dot,b.dot),React.createElement(Svg.RRect,b.rrect),React.createElement(Svg.CRect,b.crect),React.createElement(Svg.Polygon,b.polygon),React.createElement(Svg.Polyline,b.polyline),React.createElement(Svg.Text,b.text),React.createElement(Svg.Grid,b.grid)))}}class Container extends React.Component{constructor(a){super(a),this.state={svg:{x:800,y:800},menu:{}},this.sort=this.sort.bind(this)}componentWillMount(){console.log('component will mount')}componentDidMount(){this.timer=setInterval(()=>this.tick(),1e3)}componentWillReceiveProps(){this.forceUpdate()}shouldComponentUpdate(){}componentWillUpdate(){}componentDidUpdate(){}componentWillUnmount(){clearInterval(this.timer)}handleChange(){this.setState(()=>({}))}render(){var a=Math.ceil;return React.createElement('div',{className:'row'},React.createElement(Nav,{m:this.props.g.M,cate:this.category}),React.createElement(Filter,{filter:this.state.filter,setDate:this.setDate,search:this.search}),React.createElement(Tb,{data:this.state.data.filter((a)=>''!==a.作物),sort:this.sort,opt:this.state.opt[this.state.type],graph:this.graph,p:a(this.state.opt[this.state.type].N/this.props.g.R),c:this.state.cur,cate:this.category}),React.createElement(Pagination,{c:this.state.cur,t:a(this.state.opt[this.state.type].N/this.props.g.R),p:this.props.g.P,page:this.page}),React.createElement(Modal,{d:this.state.graph}))}}if(Content.defaultProps={},this.document){let a=document.getElementById('content');ReactDOM.render(React.createElement(Content,{d:JSON.parse(a.dataset.d)}),a),a.removeAttribute('data-d')}